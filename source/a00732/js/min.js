/*
Copyright (c) 2010, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 3.2.0
build: 2676
*/

if (typeof YUI != "undefined") { var _YUI = YUI; } var YUI = function () { var i = 0, Y = this, args = arguments, l = args.length, gconf = (typeof YUI_config !== "undefined") && YUI_config; if (!(Y instanceof YUI)) { Y = new YUI(); } else { Y._init(); if (gconf) { Y.applyConfig(gconf); } if (!l) { Y._setup(); } } if (l) { for (; i < l; i++) { Y.applyConfig(args[i]); } Y._setup(); } return Y; }; (function () { var proto, prop, VERSION = "3.2.0", BASE = "http://yui.yahooapis.com/", DOC_LABEL = "eva-js-enabled", NOOP = function () { }, SLICE = Array.prototype.slice, APPLY_TO_AUTH = { "io.xdrReady": 1, "io.xdrResponse": 1, "SWF.eventHandler": 1 }, hasWin = (typeof window != "undefined"), win = (hasWin) ? window : null, doc = (hasWin) ? win.document : null, docEl = doc && doc.documentElement, docClass = docEl && docEl.className, instances = {}, time = new Date().getTime(), add = function (el, type, fn, capture) { if (el && el.addEventListener) { el.addEventListener(type, fn, capture); } else { if (el && el.attachEvent) { el.attachEvent("on" + type, fn); } } }, remove = function (el, type, fn, capture) { if (el && el.removeEventListener) { try { el.removeEventListener(type, fn, capture); } catch (ex) { } } else { if (el && el.detachEvent) { el.detachEvent("on" + type, fn); } } }, handleLoad = function () { YUI.Env.windowLoaded = true; YUI.Env.DOMReady = true; if (hasWin) { remove(window, "load", handleLoad); } }, getLoader = function (Y, o) { var loader = Y.Env._loader; if (loader) { loader.ignoreRegistered = false; loader.onEnd = null; loader.data = null; loader.required = []; loader.loadType = null; } else { loader = new Y.Loader(Y.config); Y.Env._loader = loader; } return loader; }, clobber = function (r, s) { for (var i in s) { if (s.hasOwnProperty(i)) { r[i] = s[i]; } } }; if (docEl && docClass.indexOf(DOC_LABEL) == -1) { if (docClass) { docClass += " "; } docClass += DOC_LABEL; docEl.className = docClass; } if (VERSION.indexOf("@") > -1) { VERSION = "3.2.0pr1"; } proto = { applyConfig: function (o) { o = o || NOOP; var attr, name, config = this.config, mods = config.modules, groups = config.groups, rls = config.rls, loader = this.Env._loader; for (name in o) { if (o.hasOwnProperty(name)) { attr = o[name]; if (mods && name == "modules") { clobber(mods, attr); } else { if (groups && name == "groups") { clobber(groups, attr); } else { if (rls && name == "rls") { clobber(rls, attr); } else { if (name == "win") { config[name] = attr.contentWindow || attr; config.doc = config[name].document; } else { if (name == "_yuid") { } else { config[name] = attr; } } } } } } } if (loader) { loader._config(o); } }, _config: function (o) { this.applyConfig(o); }, _init: function () { var filter, Y = this, G_ENV = YUI.Env, Env = Y.Env, prop, config; Y.version = VERSION; if (!Env) { Y.Env = { mods: {}, versions: {}, base: BASE, cdn: BASE + VERSION + "/build/", _idx: 0, _used: {}, _attached: {}, _yidx: 0, _uidx: 0, _guidp: "y", _loaded: {}, getBase: G_ENV && G_ENV.getBase || function (srcPattern, comboPattern) { var b, nodes, i, src, match; nodes = (doc && doc.getElementsByTagName("script")) || []; for (i = 0; i < nodes.length; i = i + 1) { src = nodes[i].src; if (src) { match = src.match(srcPattern); b = match && match[1]; if (b) { filter = match[2]; if (filter) { match = filter.indexOf("js"); if (match > -1) { filter = filter.substr(0, match); } } match = src.match(comboPattern); if (match && match[3]) { b = match[1] + match[3]; } break; } } } return b || Env.cdn; } }; Env = Y.Env; Env._loaded[VERSION] = {}; if (G_ENV && Y !== YUI) { Env._yidx = ++G_ENV._yidx; Env._guidp = ("eva_" + VERSION + "_" + Env._yidx + "_" + time).replace(/\./g, "_"); } else { if (typeof _YUI != "undefined") { G_ENV = _YUI.Env; Env._yidx += G_ENV._yidx; Env._uidx += G_ENV._uidx; for (prop in G_ENV) { if (!(prop in Env)) { Env[prop] = G_ENV[prop]; } } } } Y.id = Y.stamp(Y); instances[Y.id] = Y; } Y.constructor = YUI; Y.config = Y.config || { win: win, doc: doc, debug: true, useBrowserConsole: true, throwFail: true, bootstrap: true, fetchCSS: true }; config = Y.config; config.base = YUI.config.base || Y.Env.getBase(/^(.*)yui\/yui([\.\-].*)js(\?.*)?$/, /^(.*\?)(.*\&)(.*)yui\/yui[\.\-].*js(\?.*)?$/); config.loaderPath = YUI.config.loaderPath || "loader/loader" + (filter || "-min.") + "js"; }, _setup: function (o) { var i, Y = this, core = [], mods = YUI.Env.mods, extras = Y.config.core || ["get", "rls", "intl-base", "loader", "yui-log", "yui-later", "yui-throttle"]; for (i = 0; i < extras.length; i++) { if (mods[extras[i]]) { core.push(extras[i]); } } Y._attach(["yui-base"]); Y._attach(core); }, applyTo: function (id, method, args) { if (!(method in APPLY_TO_AUTH)) { this.log(method + ": applyTo not allowed", "warn", "yui"); return null; } var instance = instances[id], nest, m, i; if (instance) { nest = method.split("."); m = instance; for (i = 0; i < nest.length; i = i + 1) { m = m[nest[i]]; if (!m) { this.log("applyTo not found: " + method, "warn", "yui"); } } return m.apply(instance, args); } return null; }, add: function (name, fn, version, details) { details = details || {}; var env = YUI.Env, mod = { name: name, fn: fn, version: version, details: details }, loader, i; env.mods[name] = mod; env.versions[version] = env.versions[version] || {}; env.versions[version][name] = mod; for (i in instances) { if (instances.hasOwnProperty(i)) { loader = instances[i].Env._loader; if (loader) { if (!loader.moduleInfo[name]) { loader.addModule(details, name); } } } } return this; }, _attach: function (r, fromLoader) { var i, name, mod, details, req, use, mods = YUI.Env.mods, Y = this, done = Y.Env._attached, len = r.length; for (i = 0; i < len; i++) { name = r[i]; mod = mods[name]; if (!done[name] && mod) { done[name] = true; details = mod.details; req = details.requires; use = details.use; if (req && req.length) { if (!Y._attach(req)) { return false; } } if (mod.fn) { try { mod.fn(Y, name); } catch (e) { Y.error("Attach error: " + name, e, name); return false; } } if (use && use.length) { if (!Y._attach(use)) { return false; } } } } return true; }, use: function () { if (!this.Array) { this._attach(["yui-base"]); } var len, loader, handleBoot, Y = this, G_ENV = YUI.Env, args = SLICE.call(arguments, 0), mods = G_ENV.mods, Env = Y.Env, used = Env._used, queue = G_ENV._loaderQueue, firstArg = args[0], callback = args[args.length - 1], YArray = Y.Array, config = Y.config, boot = config.bootstrap, missing = [], r = [], star, ret = true, fetchCSS = config.fetchCSS, process = function (names, skip) { if (!names.length) { return; } YArray.each(names, function (name) { if (!skip) { r.push(name); } if (used[name]) { return; } var m = mods[name], req, use; if (m) { used[name] = true; req = m.details.requires; use = m.details.use; } else { if (!G_ENV._loaded[VERSION][name]) { missing.push(name); } else { used[name] = true; } } if (req && req.length) { process(req); } if (use && use.length) { process(use, 1); } }); }, notify = function (response) { if (callback) { try { callback(Y, response); } catch (e) { Y.error("use callback error", e, args); } } }, handleLoader = function (fromLoader) { var response = fromLoader || { success: true, msg: "not dynamic" }, newData, redo, origMissing, ret = true, data = response.data; Y._loading = false; if (data) { origMissing = missing.concat(); missing = []; r = []; process(data); redo = missing.length; if (redo) { if (missing.sort().join() == origMissing.sort().join()) { redo = false; } } } if (redo && data) { newData = args.concat(); newData.push(function () { if (Y._attach(data)) { notify(response); } }); Y._loading = false; Y.use.apply(Y, newData); } else { if (data) { ret = Y._attach(data); } if (ret) { notify(response); } } if (Y._useQueue && Y._useQueue.size() && !Y._loading) { Y.use.apply(Y, Y._useQueue.next()); } }; if (Y._loading) { Y._useQueue = Y._useQueue || new Y.Queue(); Y._useQueue.add(args); return Y; } if (typeof callback === "function") { args.pop(); } else { callback = null; } if (firstArg === "*") { star = true; args = Y.Object.keys(mods); } if (boot && !star && Y.Loader && args.length) { loader = getLoader(Y); loader.require(args); loader.ignoreRegistered = true; loader.calculate(null, (fetchCSS) ? null : "js"); args = loader.sorted; } process(args); len = missing.length; if (len) { missing = Y.Object.keys(YArray.hash(missing)); len = missing.length; } if (boot && len && Y.Loader) { Y._loading = true; loader = getLoader(Y); loader.onEnd = handleLoader; loader.context = Y; loader.data = args; loader.require((fetchCSS) ? missing : args); loader.insert(null, (fetchCSS) ? null : "js"); } else { if (len && Y.config.use_rls) { Y.Get.script(Y._rls(args), { onEnd: function (o) { handleLoader(o); }, data: args }); } else { if (boot && len && Y.Get && !Env.bootstrapped) { Y._loading = true; args = YArray(arguments, 0, true); handleBoot = function () { Y._loading = false; queue.running = false; Env.bootstrapped = true; if (Y._attach(["loader"])) { Y.use.apply(Y, args); } }; if (G_ENV._bootstrapping) { queue.add(handleBoot); } else { G_ENV._bootstrapping = true; Y.Get.script(config.base + config.loaderPath + "?v=" + this.config.q_v, { onEnd: handleBoot }); } } else { if (len) { Y.message("Requirement NOT loaded: " + missing, "warn", "yui"); } ret = Y._attach(args); if (ret) { handleLoader(); } } } } return Y; }, namespace: function () { var a = arguments, o = null, i, j, d; for (i = 0; i < a.length; i = i + 1) { d = ("" + a[i]).split("."); o = this; for (j = (d[0] == "YAHOO") ? 1 : 0; j < d.length; j = j + 1) { o[d[j]] = o[d[j]] || {}; o = o[d[j]]; } } return o; }, log: NOOP, message: NOOP, error: function (msg, e) { var Y = this, ret; if (Y.config.errorFn) { ret = Y.config.errorFn.apply(Y, arguments); } if (Y.config.throwFail && !ret) { throw (e || new Error(msg)); } else { Y.message(msg, "error"); } return Y; }, guid: function (pre) { var id = this.Env._guidp + (++this.Env._uidx); return (pre) ? (pre + id) : id; }, stamp: function (o, readOnly) { var uid; if (!o) { return o; } if (o.uniqueID && o.nodeType && o.nodeType !== 9) { uid = o.uniqueID; } else { uid = (typeof o === "string") ? o : o._yuid; } if (!uid) { uid = this.guid(); if (!readOnly) { try { o._yuid = uid; } catch (e) { uid = null; } } } return uid; } }; YUI.prototype = proto; for (prop in proto) { if (proto.hasOwnProperty(prop)) { YUI[prop] = proto[prop]; } } YUI._init(); if (hasWin) { add(window, "load", handleLoad); } else { handleLoad(); } YUI.Env.add = add; YUI.Env.remove = remove; if (typeof exports == "object") { exports.YUI = YUI; } })(); YUI.add("yui-base", function (Y) { Y.Lang = Y.Lang || {}; var L = Y.Lang, ARRAY = "array", BOOLEAN = "boolean", DATE = "date", ERROR = "error", FUNCTION = "function", NUMBER = "number", NULL = "null", OBJECT = "object", REGEX = "regexp", STRING = "string", TOSTRING = Object.prototype.toString, UNDEFINED = "undefined", TYPES = { "undefined": UNDEFINED, number: NUMBER, "boolean": BOOLEAN, string: STRING, "[object Function]": FUNCTION, "[object RegExp]": REGEX, "[object Array]": ARRAY, "[object Date]": DATE, "[object Error]": ERROR }, TRIMREGEX = /^\s+|\s+$/g, EMPTYSTRING = "", SUBREGEX = /\{\s*([^\|\}]+?)\s*(?:\|([^\}]*))?\s*\}/g; L.isArray = function (o) { return L.type(o) === ARRAY; }; L.isBoolean = function (o) { return typeof o === BOOLEAN; }; L.isFunction = function (o) { return L.type(o) === FUNCTION; }; L.isDate = function (o) { return L.type(o) === DATE && o.toString() !== "Invalid Date" && !isNaN(o); }; L.isNull = function (o) { return o === null; }; L.isNumber = function (o) { return typeof o === NUMBER && isFinite(o); }; L.isObject = function (o, failfn) { var t = typeof o; return (o && (t === OBJECT || (!failfn && (t === FUNCTION || L.isFunction(o))))) || false; }; L.isString = function (o) { return typeof o === STRING; }; L.isUndefined = function (o) { return typeof o === UNDEFINED; }; L.trim = function (s) { try { return s.replace(TRIMREGEX, EMPTYSTRING); } catch (e) { return s; } }; L.isValue = function (o) { var t = L.type(o); switch (t) { case NUMBER: return isFinite(o); case NULL: case UNDEFINED: return false; default: return !!(t); } }; L.type = function (o) { return TYPES[typeof o] || TYPES[TOSTRING.call(o)] || (o ? OBJECT : NULL); }; L.sub = function (s, o) { return ((s.replace) ? s.replace(SUBREGEX, function (match, key) { return (!L.isUndefined(o[key])) ? o[key] : match; }) : s); }; (function () { var L = Y.Lang, Native = Array.prototype, LENGTH = "length", YArray = function (o, startIdx, arraylike) { var t = (arraylike) ? 2 : YArray.test(o), l, a, start = startIdx || 0; if (t) { try { return Native.slice.call(o, start); } catch (e) { a = []; l = o.length; for (; start < l; start++) { a.push(o[start]); } return a; } } else { return [o]; } }; Y.Array = YArray; YArray.test = function (o) { var r = 0; if (L.isObject(o)) { if (L.isArray(o)) { r = 1; } else { try { if ((LENGTH in o) && !o.tagName && !o.alert && !o.apply) { r = 2; } } catch (e) { } } } return r; }; YArray.each = (Native.forEach) ? function (a, f, o) { Native.forEach.call(a || [], f, o || Y); return Y; } : function (a, f, o) { var l = (a && a.length) || 0, i; for (i = 0; i < l; i = i + 1) { f.call(o || Y, a[i], i, a); } return Y; }; YArray.hash = function (k, v) { var o = {}, l = k.length, vl = v && v.length, i; for (i = 0; i < l; i = i + 1) { o[k[i]] = (vl && vl > i) ? v[i] : true; } return o; }; YArray.indexOf = (Native.indexOf) ? function (a, val) { return Native.indexOf.call(a, val); } : function (a, val) { for (var i = 0; i < a.length; i = i + 1) { if (a[i] === val) { return i; } } return -1; }; YArray.numericSort = function (a, b) { return (a - b); }; YArray.some = (Native.some) ? function (a, f, o) { return Native.some.call(a, f, o); } : function (a, f, o) { var l = a.length, i; for (i = 0; i < l; i = i + 1) { if (f.call(o, a[i], i, a)) { return true; } } return false; }; })(); function Queue() { this._init(); this.add.apply(this, arguments); } Queue.prototype = { _init: function () { this._q = []; }, next: function () { return this._q.shift(); }, last: function () { return this._q.pop(); }, add: function () { Y.Array.each(Y.Array(arguments, 0, true), function (fn) { this._q.push(fn); }, this); return this; }, size: function () { return this._q.length; } }; Y.Queue = Queue; YUI.Env._loaderQueue = YUI.Env._loaderQueue || new Queue(); (function () { var L = Y.Lang, DELIMITER = "__", _iefix = function (r, s) { var fn = s.toString; if (L.isFunction(fn) && fn != Object.prototype.toString) { r.toString = fn; } }; Y.merge = function () { var a = arguments, o = {}, i, l = a.length; for (i = 0; i < l; i = i + 1) { Y.mix(o, a[i], true); } return o; }; Y.mix = function (r, s, ov, wl, mode, merge) { if (!s || !r) { return r || Y; } if (mode) { switch (mode) { case 1: return Y.mix(r.prototype, s.prototype, ov, wl, 0, merge); case 2: Y.mix(r.prototype, s.prototype, ov, wl, 0, merge); break; case 3: return Y.mix(r, s.prototype, ov, wl, 0, merge); case 4: return Y.mix(r.prototype, s, ov, wl, 0, merge); default: } } var i, l, p, type; if (wl && wl.length) { for (i = 0, l = wl.length; i < l; ++i) { p = wl[i]; type = L.type(r[p]); if (s.hasOwnProperty(p)) { if (merge && type == "object") { Y.mix(r[p], s[p]); } else { if (ov || !(p in r)) { r[p] = s[p]; } } } } } else { for (i in s) { if (s.hasOwnProperty(i)) { if (merge && L.isObject(r[i], true)) { Y.mix(r[i], s[i], ov, wl, 0, true); } else { if (ov || !(i in r)) { r[i] = s[i]; } } } } if (Y.UA.ie) { _iefix(r, s); } } return r; }; Y.cached = function (source, cache, refetch) { cache = cache || {}; return function (arg1) { var k = (arguments.length > 1) ? Array.prototype.join.call(arguments, DELIMITER) : arg1; if (!(k in cache) || (refetch && cache[k] == refetch)) { cache[k] = source.apply(source, arguments); } return cache[k]; }; }; })(); (function () { Y.Object = function (o) { var F = function () { }; F.prototype = o; return new F(); }; var O = Y.Object, owns = function (o, k) { return o && o.hasOwnProperty && o.hasOwnProperty(k); }, UNDEFINED, _extract = function (o, what) { var count = (what === 2), out = (count) ? 0 : [], i; for (i in o) { if (owns(o, i)) { if (count) { out++; } else { out.push((what) ? o[i] : i); } } } return out; }; O.keys = function (o) { return _extract(o); }; O.values = function (o) { return _extract(o, 1); }; O.size = function (o) { return _extract(o, 2); }; O.hasKey = owns; O.hasValue = function (o, v) { return (Y.Array.indexOf(O.values(o), v) > -1); }; O.owns = owns; O.each = function (o, f, c, proto) { var s = c || Y, i; for (i in o) { if (proto || owns(o, i)) { f.call(s, o[i], i, o); } } return Y; }; O.some = function (o, f, c, proto) { var s = c || Y, i; for (i in o) { if (proto || owns(o, i)) { if (f.call(s, o[i], i, o)) { return true; } } } return false; }; O.getValue = function (o, path) { if (!Y.Lang.isObject(o)) { return UNDEFINED; } var i, p = Y.Array(path), l = p.length; for (i = 0; o !== UNDEFINED && i < l; i++) { o = o[p[i]]; } return o; }; O.setValue = function (o, path, val) { var i, p = Y.Array(path), leafIdx = p.length - 1, ref = o; if (leafIdx >= 0) { for (i = 0; ref !== UNDEFINED && i < leafIdx; i++) { ref = ref[p[i]]; } if (ref !== UNDEFINED) { ref[p[i]] = val; } else { return UNDEFINED; } } return o; }; O.isEmpty = function (o) { for (var i in o) { if (owns(o, i)) { return false; } } return true; }; })(); Y.UA = YUI.Env.UA || function () { var numberify = function (s) { var c = 0; return parseFloat(s.replace(/\./g, function () { return (c++ == 1) ? "" : "."; })); }, win = Y.config.win, nav = win && win.navigator, o = { ie: 0, opera: 0, gecko: 0, webkit: 0, chrome: 0, mobile: null, air: 0, ipad: 0, iphone: 0, ipod: 0, ios: null, android: 0, caja: nav && nav.cajaVersion, secure: false, os: null }, ua = nav && nav.userAgent, loc = win && win.location, href = loc && loc.href, m; o.secure = href && (href.toLowerCase().indexOf("https") === 0); if (ua) { if ((/windows|win32/i).test(ua)) { o.os = "windows"; } else { if ((/macintosh/i).test(ua)) { o.os = "macintosh"; } else { if ((/rhino/i).test(ua)) { o.os = "rhino"; } } } if ((/KHTML/).test(ua)) { o.webkit = 1; } m = ua.match(/AppleWebKit\/([^\s]*)/); if (m && m[1]) { o.webkit = numberify(m[1]); if (/ Mobile\//.test(ua)) { o.mobile = "Apple"; m = ua.match(/OS ([^\s]*)/); if (m && m[1]) { m = numberify(m[1].replace("_", ".")); } o.ipad = (navigator.platform == "iPad") ? m : 0; o.ipod = (navigator.platform == "iPod") ? m : 0; o.iphone = (navigator.platform == "iPhone") ? m : 0; o.ios = o.ipad || o.iphone || o.ipod; } else { m = ua.match(/NokiaN[^\/]*|Android \d\.\d|webOS\/\d\.\d/); if (m) { o.mobile = m[0]; } if (/ Android/.test(ua)) { o.mobile = "Android"; m = ua.match(/Android ([^\s]*);/); if (m && m[1]) { o.android = numberify(m[1]); } } } m = ua.match(/Chrome\/([^\s]*)/); if (m && m[1]) { o.chrome = numberify(m[1]); } else { m = ua.match(/AdobeAIR\/([^\s]*)/); if (m) { o.air = m[0]; } } } if (!o.webkit) { m = ua.match(/Opera[\s\/]([^\s]*)/); if (m && m[1]) { o.opera = numberify(m[1]); m = ua.match(/Opera Mini[^;]*/); if (m) { o.mobile = m[0]; } } else { m = ua.match(/MSIE\s([^;]*)/); if (m && m[1]) { o.ie = numberify(m[1]); } else { m = ua.match(/Gecko\/([^\s]*)/); if (m) { o.gecko = 1; m = ua.match(/rv:([^\s\)]*)/); if (m && m[1]) { o.gecko = numberify(m[1]); } } } } } } YUI.Env.UA = o; return o; }(); }, "3.2.0"); YUI.add("get", function (Y) { (function () { var ua = Y.UA, L = Y.Lang, TYPE_JS = "text/javascript", TYPE_CSS = "text/css", STYLESHEET = "stylesheet"; Y.Get = function () { var _get, _purge, _track, queues = {}, qidx = 0, purging, _node = function (type, attr, win) { var w = win || Y.config.win, d = w.document, n = d.createElement(type), i; for (i in attr) { if (attr[i] && attr.hasOwnProperty(i)) { n.setAttribute(i, attr[i]); } } return n; }, _linkNode = function (url, win, attributes) { var o = { id: Y.guid(), type: TYPE_CSS, rel: STYLESHEET, href: url }; if (attributes) { Y.mix(o, attributes); } return _node("link", o, win); }, _scriptNode = function (url, win, attributes) { var o = { id: Y.guid(), type: TYPE_JS }; if (attributes) { Y.mix(o, attributes); } o.src = url; return _node("script", o, win); }, _returnData = function (q, msg, result) { return { tId: q.tId, win: q.win, data: q.data, nodes: q.nodes, msg: msg, statusText: result, purge: function () { _purge(this.tId); } }; }, _end = function (id, msg, result) { var q = queues[id], sc; if (q && q.onEnd) { sc = q.context || q; q.onEnd.call(sc, _returnData(q, msg, result)); } }, _fail = function (id, msg) { var q = queues[id], sc; if (q.timer) { clearTimeout(q.timer); } if (q.onFailure) { sc = q.context || q; q.onFailure.call(sc, _returnData(q, msg)); } _end(id, msg, "failure"); }, _finish = function (id) { var q = queues[id], msg, sc; if (q.timer) { clearTimeout(q.timer); } q.finished = true; if (q.aborted) { msg = "transaction " + id + " was aborted"; _fail(id, msg); return; } if (q.onSuccess) { sc = q.context || q; q.onSuccess.call(sc, _returnData(q)); } _end(id, msg, "OK"); }, _timeout = function (id) { var q = queues[id], sc; if (q.onTimeout) { sc = q.context || q; q.onTimeout.call(sc, _returnData(q)); } _end(id, "timeout", "timeout"); }, _next = function (id, loaded) { var q = queues[id], msg, w, d, h, n, url, s, insertBefore; if (q.timer) { clearTimeout(q.timer); } if (q.aborted) { msg = "transaction " + id + " was aborted"; _fail(id, msg); return; } if (loaded) { q.url.shift(); if (q.varName) { q.varName.shift(); } } else { q.url = (L.isString(q.url)) ? [q.url] : q.url; if (q.varName) { q.varName = (L.isString(q.varName)) ? [q.varName] : q.varName; } } w = q.win; d = w.document; h = d.getElementsByTagName("head")[0]; if (q.url.length === 0) { _finish(id); return; } url = q.url[0]; if (!url) { q.url.shift(); return _next(id); } if (q.timeout) { q.timer = setTimeout(function () { _timeout(id); }, q.timeout); } if (q.type === "script") { n = _scriptNode(url, w, q.attributes); } else { n = _linkNode(url, w, q.attributes); } _track(q.type, n, id, url, w, q.url.length); q.nodes.push(n); insertBefore = q.insertBefore || d.getElementsByTagName("base")[0]; if (insertBefore) { s = _get(insertBefore, id); if (s) { s.parentNode.insertBefore(n, s); } } else { h.appendChild(n); } if ((ua.webkit || ua.gecko) && q.type === "css") { if (!n.onload) { _next(id, url); } } }, _autoPurge = function () { if (purging) { return; } purging = true; var i, q; for (i in queues) { if (queues.hasOwnProperty(i)) { q = queues[i]; if (q.autopurge && q.finished) { _purge(q.tId); delete queues[i]; } } } purging = false; }, _queue = function (type, url, opts) { opts = opts || {}; var id = "q" + (qidx++), q, thresh = opts.purgethreshold || Y.Get.PURGE_THRESH; if (qidx % thresh === 0) { _autoPurge(); } queues[id] = Y.merge(opts, { tId: id, type: type, url: url, finished: false, nodes: [] }); q = queues[id]; q.win = q.win || Y.config.win; q.context = q.context || q; q.autopurge = ("autopurge" in q) ? q.autopurge : (type === "script") ? true : false; q.attributes = q.attributes || {}; q.attributes.charset = opts.charset || q.attributes.charset || "utf-8"; _next(id); return { tId: id }; }; _track = function (type, n, id, url, win, qlength, trackfn) { var f = trackfn || _next; if (ua.ie) { n.onreadystatechange = function () { var rs = this.readyState; if ("loaded" === rs || "complete" === rs) { n.onreadystatechange = null; f(id, url); } }; } else { if (ua.webkit) { if (type === "script") { n.addEventListener("load", function () { f(id, url); }); } } else { n.onload = function () { f(id, url); }; n.onerror = function (e) { _fail(id, e + ": " + url); }; } } }; _get = function (nId, tId) { var q = queues[tId], n = (L.isString(nId)) ? q.win.document.getElementById(nId) : nId; if (!n) { _fail(tId, "target node not found: " + nId); } return n; }; _purge = function (tId) { var n, l, d, h, s, i, node, attr, insertBefore, q = queues[tId]; if (q) { n = q.nodes; l = n.length; d = q.win.document; h = d.getElementsByTagName("head")[0]; insertBefore = q.insertBefore || d.getElementsByTagName("base")[0]; if (insertBefore) { s = _get(insertBefore, tId); if (s) { h = s.parentNode; } } for (i = 0; i < l; i = i + 1) { node = n[i]; if (node.clearAttributes) { node.clearAttributes(); } else { for (attr in node) { if (node.hasOwnProperty(attr)) { delete node[attr]; } } } h.removeChild(node); } } q.nodes = []; }; return { PURGE_THRESH: 20, _finalize: function (id) { setTimeout(function () { _finish(id); }, 0); }, abort: function (o) { var id = (L.isString(o)) ? o : o.tId, q = queues[id]; if (q) { q.aborted = true; } }, script: function (url, opts) { return _queue("script", url, opts); }, css: function (url, opts) { return _queue("css", url, opts); } }; }(); })(); }, "3.2.0"); YUI.add("features", function (Y) { var tests = {}; Y.mix(Y.namespace("Features"), { tests: tests, add: function (cat, name, o) { tests[cat] = tests[cat] || {}; tests[cat][name] = o; }, all: function (cat, args) { var cat_o = tests[cat], result = ""; if (cat_o) { Y.Object.each(cat_o, function (v, k) { result += k + ":" + (Y.Features.test(cat, k, args) ? 1 : 0) + ";"; }); } return result; }, test: function (cat, name, args) { var result, ua, test, cat_o = tests[cat], feature = cat_o && cat_o[name]; if (!feature) { } else { result = feature.result; if (Y.Lang.isUndefined(result)) { ua = feature.ua; if (ua) { result = (Y.UA[ua]); } test = feature.test; if (test && ((!ua) || result)) { result = test.apply(Y, args); } feature.result = result; } } return result; } }); var add = Y.Features.add; add("load", "0", { trigger: "dom-style", ua: "ie" }); add("load", "1", { test: function (Y) { var docMode = Y.config.doc.documentMode; return Y.UA.ie && (!("onhashchange" in Y.config.win) || !docMode || docMode < 8); }, trigger: "history-hash" }); add("load", "2", { test: function (Y) { return (Y.config.win && ("ontouchstart" in Y.config.win && !Y.UA.chrome)); }, trigger: "dd-drag" }); }, "3.2.0", { requires: ["yui-base"] }); YUI.add("rls", function (Y) { Y._rls = function (what) { var config = Y.config, rls = config.rls || { m: 1, v: Y.version, gv: config.gallery, env: 1, lang: config.lang, "2in3v": config["2in3"], "2v": config.yui2, filt: config.filter, filts: config.filters, tests: 1 }, rls_base = config.rls_base || "load?", rls_tmpl = config.rls_tmpl || function () { var s = "", param; for (param in rls) { if (param in rls && rls[param]) { s += param + "={" + param + "}&"; } } return s; }(), url; rls.m = what; rls.env = Y.Object.keys(YUI.Env.mods); rls.tests = Y.Features.all("load", [Y]); url = Y.Lang.sub(rls_base + rls_tmpl, rls); config.rls = rls; config.rls_tmpl = rls_tmpl; return url; }; }, "3.2.0", { requires: ["yui-base", "get", "features"] }); YUI.add("intl-base", function (Y) { var SPLIT_REGEX = /[, ]/; Y.mix(Y.namespace("Intl"), { lookupBestLang: function (preferredLanguages, availableLanguages) { var i, language, result, index; function scan(language) { var i; for (i = 0; i < availableLanguages.length; i += 1) { if (language.toLowerCase() === availableLanguages[i].toLowerCase()) { return availableLanguages[i]; } } } if (Y.Lang.isString(preferredLanguages)) { preferredLanguages = preferredLanguages.split(SPLIT_REGEX); } for (i = 0; i < preferredLanguages.length; i += 1) { language = preferredLanguages[i]; if (!language || language === "*") { continue; } while (language.length > 0) { result = scan(language); if (result) { return result; } else { index = language.lastIndexOf("-"); if (index >= 0) { language = language.substring(0, index); if (index >= 2 && language.charAt(index - 2) === "-") { language = language.substring(0, index - 2); } } else { break; } } } } return ""; } }); }, "3.2.0", { requires: ["yui-base"] }); YUI.add("yui-log", function (Y) { (function () { var INSTANCE = Y, LOGEVENT = "yui:log", UNDEFINED = "undefined", LEVELS = { debug: 1, info: 1, warn: 1, error: 1 }; INSTANCE.log = function (msg, cat, src, silent) { var bail, excl, incl, m, f, Y = INSTANCE, c = Y.config, publisher = (Y.fire) ? Y : YUI.Env.globalEvents; if (c.debug) { if (src) { excl = c.logExclude; incl = c.logInclude; if (incl && !(src in incl)) { bail = 1; } else { if (excl && (src in excl)) { bail = 1; } } } if (!bail) { if (c.useBrowserConsole) { m = (src) ? src + ": " + msg : msg; if (Y.Lang.isFunction(c.logFn)) { c.logFn.call(Y, msg, cat, src); } else { if (typeof console != UNDEFINED && console.log) { f = (cat && console[cat] && (cat in LEVELS)) ? cat : "log"; console[f](m); } else { if (typeof opera != UNDEFINED) { opera.postError(m); } } } } if (publisher && !silent) { if (publisher == Y && (!publisher.getEvent(LOGEVENT))) { publisher.publish(LOGEVENT, { broadcast: 2 }); } publisher.fire(LOGEVENT, { msg: msg, cat: cat, src: src }); } } } return Y; }; INSTANCE.message = function () { return INSTANCE.log.apply(INSTANCE, arguments); }; })(); }, "3.2.0", { requires: ["yui-base"] }); YUI.add("yui-later", function (Y) { (function () { var L = Y.Lang, later = function (when, o, fn, data, periodic) { when = when || 0; var m = fn, f, id; if (o && L.isString(fn)) { m = o[fn]; } f = !L.isUndefined(data) ? function () { m.apply(o, Y.Array(data)); } : function () { m.call(o); }; id = (periodic) ? setInterval(f, when) : setTimeout(f, when); return { id: id, interval: periodic, cancel: function () { if (this.interval) { clearInterval(id); } else { clearTimeout(id); } } }; }; Y.later = later; L.later = later; })(); }, "3.2.0", { requires: ["yui-base"] }); YUI.add("yui-throttle", function (Y) {
    /* Based on work by Simon Willison: http://gist.github.com/292562 */
    var throttle = function (fn, ms) { ms = (ms) ? ms : (Y.config.throttleTime || 150); if (ms === -1) { return (function () { fn.apply(null, arguments); }); } var last = (new Date()).getTime(); return (function () { var now = (new Date()).getTime(); if (now - last > ms) { last = now; fn.apply(null, arguments); } }); }; Y.throttle = throttle;
}, "3.2.0", { requires: ["yui-base"] }); YUI.add("yui", function (Y) { }, "3.2.0", { use: ["yui-base", "get", "features", "rls", "intl-base", "yui-log", "yui-later", "yui-throttle"] }); (function () { YUI_config = { base: "http://r.ytrss.com/rs/js/yui/3.2.0/build/", comboBase: "http://r.ytrss.com/{timestamp}/a.aspx?", y_v: "3.2.0", e_v: "1.0.3", groups: { eva: { base: "http://r.ytrss.com/rs/js/eva/1.0.3/", modules: { info: { path: "base/info.js" }, ebase: { path: "base/e-base-min.js", requires: ["json", "node"] }, slide: { path: "widget/slide/slide-min.js", requires: ["plug-switchable", "plug-switchable-effect"] }, calendar: { path: "widget/calendar/calendar-min.js", requires: ["calendar-skin", "node"] }, jquery: { path: "widget/jquery/jquery-1.4.2.min.js" }, "calendar-skin": { path: "widget/calendar/skin/default-min.css", type: "css" }, postip: { path: "widget/postip/postip-min.js", requires: ["node", "anim"] }, "plug-postip": { path: "widget/postip/plug-postip-min.js", requires: ["plugin", "event-mouseenter"] }, highlight: { path: "widget/hljs/highlight-min.js", requires: ["hlcss"] }, hlcss: { path: "widget/hljs/highlight-min.css", type: "css" }, colorbox: { path: "widget/colorbox/colorbox-min.js", requires: ["jquery", "colorbox-css"] }, "colorbox-css": { path: "widget/colorbox/colorbox-min.css", type: "css" }, inputip: { path: "widget/inputip/inputip-min.js", requires: ["node"] }, gotop: { path: "widget/gotop/gotop-min.js", requires: ["node", "anim", "gotop-default-skin"] }, "gotop-default-skin": { path: "widget/gotop/assets/default-min.css", type: "css" }, rating: { path: "widget/rating/rating-min.js", requires: ["node", "io", "rating-css"] }, "rating-css": { path: "widget/rating/rating-min.css", type: "css" }, tip: { path: "widget/tip/tip-min.js", requires: ["node", "anim", "tip-css"] }, "tip-css": { path: "widget/tip/tip-skin-min.css", type: "css" }, "box-skin": { path: "widget/box/skin-min.css", type: "css" }, box: { path: "widget/box/box-min.js", requires: ["box-skin", "node", "overlay", "dd-plugin", "anim-color"] }, togglefold: { path: "widget/toggle-fold/toggle-fold-min.js", requires: ["node"] }, linkshare: { path: "widget/linkshare/linkshare-min.js", requires: ["node", "ebase", "linkshare-css"] }, "linkshare-css": { path: "widget/linkshare/linkshare-min.css", type: "css" }, overlayer: { path: "widget/overlayer/overlayer-min.js", requires: ["node"] }, magnifier: { path: "widget/magnifier/magnifier-min.js", requires: ["node", "anim-base", "event-mouseenter", "magnifier-css"] }, "magnifier-css": { path: "widget/magnifier/magnifier-min.css", type: "css" }, count: { path: "widget/count/count-min.js", requires: ["node"] }, carousel: { path: "widget/carousel/carousel-min.js", requires: ["node", "anim", "carousel-css"] }, "carousel-css": { path: "widget/carousel/carousel-min.css", type: "css" }, datalazyloader: { path: "widget/datalazyloader/datalazyloader-min.js", requires: ["node", "oop"] }, navi: { path: "widget/navi/navi-min.js", requires: ["node", "plug-postip", "jsonp"] }, "plug-switchable": { path: "widget/plug-switchable/plug-switchable-min.js", requires: ["node", "plugin", "event-mouseenter"] }, "plug-switchable-effect": { path: "widget/plug-switchable-effect/plug-effect-min.js", requires: ["node", "plugin", "anim"] }, "plug-carousel": { path: "widget/plug-carousel/plug-carousel-min.js", requires: ["plug-switchable"] }, "plug-slide": { path: "widget/plug-slide/plug-slide.js", requires: ["plug-switchable"] }, tab: { path: "widget/tabview/tab-min.js", requires: ["plug-switchable"] }, cascade: { path: "widget/cascade/cascade-min.js", requires: ["widget", "io-base", "io-xdr", "json", "jsonp"] }, "cascade-select": { path: "widget/cascade/cascadeSelect-min.js", requires: ["cascade", "cascade-select-css"] }, "cascade-select-css": { path: "widget/cascade/assets/cascadeSelect-min.css", type: "css" }, "preview-css": { path: "widget/preview/assets/preview-min.css", type: "css" }, preview: { path: "widget/preview/preview-min.js", requires: ["node", "overlay", "event-custom-base", "event-mouseenter", "event-ready", "plug-carousel", "plug-switchable-effect", "preview-css"] }, "dropdown-plug": { path: "widget/dropdown/dropdown-plug-min.js", requires: ["plug-postip"] }, "count-plug": { path: "widget/count/count-plug-min.js", requires: ["node-base", "node-pluginhost", "plugin", "jsonp"] }, "ui-prolist": { path: "widget/ui-prolist/ui-prolist-min.js", requires: ["node", "jsonp", "event-custom", "cookie"] }, "ui-header": { path: "widget/ui-header/ui-header-min.js", requires: ["navi", "cookie", "json-parse", "jsonp", "inputip"] }, "ui-ifeng-header": { path: "widget/ui-header/ui-ifeng-header-min.js", requires: ["ui-header", "io-base"] }, "plug-float-fix": { path: "widget/plug-float-fix/float-fix-min.js", requires: ["node", "plugin"] }, "plug-fix": { path: "widget/plug-fix/fix-min.js", requires: ["node", "plugin"] }, "ui-uc-common": { path: "widget/ui-uc-common/ui-uc-common-min.js", requires: ["plug-float-fix", "plug-fix", "anim"] }, hijack: { path: "widget/hijack/hijack-min.js", requires: ["box", "io-form", "event-delegate"] }, "ui-minilogin": { path: "widget/ui-minilogin/ui-minilogin-min.js", requires: ["box"] } } } } }; })(); (function () { YUI.prototype._evaRequireModules = []; YUI.prototype._evaReadyFns = []; YUI.prototype.require = function () { var instance = this; var slice = Array.prototype.slice; var args = slice.call(arguments, 0); instance._evaRequireModules = instance._evaRequireModules.concat(args); return instance; }; YUI.prototype.ready = function (fn) { var self = this; if (self.Lang.isFunction(fn)) { self._evaReadyFns.push(fn); } }; YUI.Eva_config = YUI.Eva_config || {}; var dftCfg = YUI.Eva_config; var curScriptLink = document.getElementsByTagName("script"); curScriptLink = curScriptLink[curScriptLink.length - 1]; var queryHash = (function (url) { var reg = /[&|\?](\w*?)=([^&\?#]+)/g; var hash = {}; var result = reg.exec(url); while (result != null) { hash[result[1]] = result[2]; result = reg.exec(url); } return hash; })(curScriptLink.src.toLowerCase()); for (var i in queryHash) { if (i == "combine") { dftCfg.combine = (queryHash.combine == "true") ? true : false; continue; } else { if (i == "version") { dftCfg.q_v = queryHash.version; continue; } else { if (i == "yuibase") { dftCfg.base = queryHash.yuibase; continue; } else { if (i == "combobase") { dftCfg.comboBase = unescape(queryHash.combobase); continue; } else { if (i == "throwfail") { dftCfg.throwFail = (queryHash.throwfail == "true") ? true : false; continue; } } } } } dftCfg[i] = queryHash[i]; } var Eva = new YUI(dftCfg); Eva.config.groups.eva.combine = dftCfg.combine; if (queryHash.cdn) { Eva.config.groups.eva.base = queryHash.cdn; } var guidExtensions = function (E) { E.Env._guidp = ["eva", E.version, E.Env._yidx].join("-").replace(/\./g, "-"); }; Eva._guidExtensions = guidExtensions; window.Eva = Eva; window.S = Eva; })(); (function () { var readyEvent = "readystatechange"; if (document.documentElement.doScroll) { if (self !== self.top) { var stateChangeHandler = function () { if (document.readyState == "complete") { evaStartUse(); } }; YUI.Env.add(document, readyEvent, stateChangeHandler); } else { var timer = setInterval(function () { try { document.documentElement.doScroll("left"); clearInterval(timer); timer = null; evaStartUse(); } catch (domNotReady) { } }, 40); } } else { readyEvent = "DOMContentLoaded"; var readyHandler = function () { evaStartUse(); }; YUI.Env.add(document, readyEvent, readyHandler); } function evaStartUse() { Eva._evaRequireModules.push(function () { S.Array.each(S._evaReadyFns, function (fn) { fn.call(S, S); }); }); Eva.use.apply(Eva, Eva._evaRequireModules); } })();